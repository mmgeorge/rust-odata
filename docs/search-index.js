var searchIndex = {};
searchIndex["rust_odata"] = {"doc":"Rust oData Rust oData is library for building [oData][ODATA] REST services in Rust. This library is referenced and utilized by the Connect Four repository for client-server communication.","items":[[0,"edm","rust_odata","This module includes type information for a handful of Edm types. Notably the date types are not yet implemented. Type definition guidelines can be found [here][OASIS] OASIS: http://docs.oasis-open.org/odata/odata-json-csdl/v4.0/csprd01/odata-json-csdl-v4.0-csprd01.html#_Toc441572996",null,null],[4,"Type","rust_odata::edm","",null,null],[13,"Boolean","","",0,null],[13,"Byte","","",0,null],[13,"Decimal","","",0,null],[13,"Double","","",0,null],[13,"Int16","","",0,null],[13,"Int32","","",0,null],[13,"Int64","","",0,null],[13,"String","","",0,null],[5,"from","","",null,{"inputs":[{"name":"str"}],"output":{"name":"type"}}],[5,"ty","","",null,{"inputs":[{"name":"type"}],"output":{"name":"vec"}}],[5,"format","","",null,{"inputs":[{"name":"type"}],"output":{"name":"str"}}],[0,"entity","rust_odata","",null,null],[3,"EntityDescr","rust_odata::entity","",null,null],[12,"name","","",1,null],[12,"keys","","",1,null],[12,"properties","","",1,null],[3,"Property","","Structure for holding property values for an Entity",null,null],[11,"name","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"keys","","",1,null],[11,"properties","","",1,null],[11,"new","","",2,{"inputs":[{"name":"str"},{"name":"type"}],"output":{"name":"property"}}],[11,"name","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"types","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"format","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[8,"Entity","","",null,null],[10,"describe","","Used to expose fields to model. Passed-up to Model through EntitySet",3,{"inputs":[],"output":{"name":"entitydescr"}}],[8,"EntitySet","","Trait for declaring CRUD-Q implementation.",null,null],[11,"create","","",4,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"result"}}],[11,"read","","",4,{"inputs":[{"name":"self"},{"name":"property"}],"output":{"name":"result"}}],[11,"read_list","","",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"update","","",4,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"result"}}],[11,"delete","","",4,{"inputs":[{"name":"self"},{"name":"property"}],"output":{"name":"result"}}],[8,"EntitySetDescr","","Internal descriptor for an EntitySet for usage by the Model. Provides access to the underlying desciptor for the EntityType.",null,null],[10,"name","","",5,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"descriptor","","",5,{"inputs":[{"name":"self"}],"output":{"name":"entitydescr"}}],[0,"model","rust_odata","",null,null],[3,"Model","rust_odata::model","",null,null],[3,"ModelBuilder","","",null,null],[11,"render","","Renders the metadata document description of the oData Model",6,{"inputs":[{"name":"self"}],"output":null}],[11,"get_metadata","","Getter for the metadata document",6,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"new","","",7,{"inputs":[{"name":"str"}],"output":{"name":"modelbuilder"}}],[11,"add","","Add a new EntitySet",7,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"modelbuilder"}}],[11,"build","","",7,{"inputs":[{"name":"self"}],"output":{"name":"model"}}],[0,"service","rust_odata","",null,null],[3,"Service","rust_odata::service","An instance of an oData service that will serve each model it possesses. Construct using a ServiceBuilder. ",null,null],[3,"ServiceBuilder","","",null,null],[11,"start","","Begin accepting requests.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",9,{"inputs":[{"name":"str"}],"output":{"name":"servicebuilder"}}],[11,"add","","",9,{"inputs":[{"name":"self"},{"name":"model"}],"output":{"name":"self"}}],[11,"build","","",9,{"inputs":[{"name":"self"}],"output":{"name":"service"}}],[14,"rust_type","rust_odata","",null,null],[14,"defEntity","","Declare a new Entity",null,null],[14,"defEntitySet","","defEntitySet!(name: ident, entity_type: ident) Defines a macro for declaring EntitySets. For instance,  ``` defEntitySet!(Dogs, Dog);  ``` Declares an EntitySet named \"Dogs\" that consistes of elements of Entity Dog. CRUD-Q operations are then exposed via implementation of the EntitySet trait for struct. ",null,null],[11,"create","rust_odata::entity","",4,{"inputs":[{"name":"self"},{"name":"e"}],"output":{"name":"result"}}],[11,"read","","",4,{"inputs":[{"name":"self"},{"name":"property"}],"output":{"name":"result"}}],[11,"read_list","","",4,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"update","","",4,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"result"}}],[11,"delete","","",4,{"inputs":[{"name":"self"},{"name":"property"}],"output":{"name":"result"}}]],"paths":[[4,"Type"],[3,"EntityDescr"],[3,"Property"],[8,"Entity"],[8,"EntitySet"],[8,"EntitySetDescr"],[3,"Model"],[3,"ModelBuilder"],[3,"Service"],[3,"ServiceBuilder"]]};
initSearch(searchIndex);
